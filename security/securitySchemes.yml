rules:
  sec-securitySchemes-oauth: &jwt-bcp
    description: |-
      Json Web Tokens RFC7519 is a compact, URL-safe means of representing
      claims to be transferred between two parties. JWT can be enclosed in
      encrypted or signed tokens like JWS and JWE.

      The [JOSE IANA registry](https://www.iana.org/assignments/jose/jose.xhtml)
      provides algorithms information.

      RFC8725 describes common pitfalls in the JWx specifications and in
      their implementations, such as:
      - the ability to ignore algorithms, eg. `{"alg": "none"}`;
      - using insecure algorithms like `RSASSA-PKCS1-v1_5` eg. `{"alg": "RS256"}`.

      An API using JWT should explicit in the `description`
      that the implementation conforms to RFC8725.

      ```
      components:
        securitySchemes:
          JWTBearer:
            type: http
            scheme: bearer
            bearerFormat: JWT
            description: |-
              A bearer token in the format of a JWS and conformato
              to the specifications included in RFC8725.
      ```

    message: >-
      JWT usage should be detailed in `description` {{error}}.
    given:
      - >-
        $..[securitySchemes][?(@.type=="oauth2")]
    then:
      - field: description
        function: truthy
      - field: description
        function: pattern
        functionOptions:
          match: >-
           .*RFC8725.*
  sec-securitySchemes-jwt:
    <<: *jwt-bcp
    given:
      - >-
        $..[securitySchemes][?(@.bearerFormat=="jwt" || @.bearerFormat=="JWT")]
