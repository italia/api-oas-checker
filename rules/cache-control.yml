rules:
  cache-control-parameter-undocumented:
    description: |-
      Cache usage SHOULD be extensively detailed in the `description` property
      to avoid data leaks or the usage of stale data.

      This rule should ensure in some way that the api provider
      documented extensively the cache usage to avoid data leaks
      or usage of stale data.

      For now this just tests the presence of `max-age` but that's
      only a placeholder. Hints welcome.
    message: >-
      Cache usage SHOULD be documented: {{error}} {{path}}
    formats:
      - oas3
    severity: warn
    recommended: true
    given: >-
      $..[parameters][?(@.in == "header" && @.name.match(/Cache-Control/i))]
    then:
    -  field: description
       function: truthy
    -  field: description
       function: pattern
       functionOptions:
         match: >-
           .*(max-age|private|no-store|no-cache).*

  cache-responses-undocumented:
    description: |-
      Cache usage SHOULD be extensively detailed in the `description` property
      to avoid data leaks or the usage of stale data.

      This rule should ensure in some way that the api provider
      documented extensively the cache usage to avoid data leaks
      or usage of stale data.

      For now this just tests the presence of `max-age` but that's
      only a placeholder. Hints welcome.
    message: >-
      Cache usage SHOULD be documented in Cache-Control and/or Expires: {{error}} {{path}}
    formats:
      - oas3
    severity: warn
    recommended: true
    given: >-
      $.[responses][?(@property[0] == "2" )][headers].[?(@property.match(/Cache-Control|Expires/))]]
    then:
    -  field: description
       function: truthy
    -  field: description
       function: pattern
       functionOptions:
         match: >-
           .*(max-age|private|no-store|no-cache).*

  expires-or-cache-control:
    description: |-
      Cache-Control overrides Expires when `max-age` is set.
    message: >-
      Cache-Control overrides Expires when `max-age` is set.. {{property}} {{error}} {{path}}
    formats:
      - oas3
    severity: warn
    recommended: true
#      $.[responses][?(@property[0] == "2" )][headers]
    given: >-
      $.[responses][?(@property[0] == "2" )][headers][?(@property.match(/cache-control|expires/i))]^
    then:
    - function: schema
      functionOptions:
        schema:
          properties:
            Cache-Control:
              type: object
            Expires:
              type: object


  beware-euristic-cache: &beware-euristic-cache
    description: |-
      If no Cache-Control or Expires are set, clients MAY use euristic cache.
    message: >-
      If no Cache-Control or Expires are set, clients MAY use euristic cache. {{property}} {{error}} {{path}}
    formats:
      - oas3
    severity: info
    recommended: true
    given: >-
      $.[responses][?(@property[0] == "2" )][headers][?(@property.match(/cache-control|expires/i))]
    then:
    - function: truthy
