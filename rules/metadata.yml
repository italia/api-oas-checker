rules:
  has-x-summary:
    message: >-
      API MUST have an one-liner #/info/x-summary field
      containing a brief description.
    description: >-
      The `#/info/x-summary` can be used to specify a brief, one-liner
      description of your API: this is very useful for catalog purposes
      (eg. this can be shown as your API subtitle in catalogs and developer
      portals).

      In OAS3.1 you can use the standard `#/info/summary` field.
    given: $
    severity: error
    recommended: true
    type: style
    formats:
    - oas3
    then:
      field: "info.x-summary"
      function: truthy

  has-termsOfService:
    message: >-
      API MUST reference the URL of the Terms of Service
      in #/info/termsOfService.
    description: >-
      API MUST reference the URL of the Terms of Service
      in `#/info/termsOfService`
    given: $
    severity: error
    recommended: true
    type: style
    formats:
    - oas3
    then:
      field: "info.termsOfService"
      function: truthy

  has-contact:
    description: >-
      API MUST reference a contact, either url or email in #/info/contact
    given: $
    severity: error
    recommended: true
    type: style
    formats:
    - oas3
    then:
      field: "info.contact"
      function: truthy

  has-x-api-id:
    message: >-
      API must have an unique identifier in x-api-id in #/info/x-api-id.
    description: |-
      The `#/info/x-api-id` field can be used to associate an identifier
      to an API.
      This is useful to track an API even when its `#/info/title` changes.
    given: $
    severity: hint
    recommended: true
    type: style
    then:
      field: "info.x-api-id"
      function: truthy

  use-semver:
    description: |-
      The API version field should follow
      [semantic versioning](https://semver.org/#semantic-versioning-specification-semver).
    severity: error
    recommended: true
    message: >-
      Specs should follow semantic versioning. {{value}} is not a valid version.
    given: $.info.version
    then:
      function: pattern
      functionOptions:
        match: "^[0-9]+.[0-9]+.[0-9]+(-[a-z0-9+.-]+)?"
